// target_node id of the slave node
node ('master'){

	def microservices = ["order-service", "product-service"]
	def version = "0.0.1"
	def microservices_root = "/work/spring-boot/"
	def microgateway_root = "/work/Microgateway/"

	stage('Build the Microservices'){
	    sh '''
		  cd /work/spring-boot/
		  docker run --rm --name service-maven -v "$PWD":/usr/share/mymaven -v "$HOME/.m2":/root/.m2 -v "$PWD"/target:/usr/share/mymaven/target -w /usr/share/mymaven maven:3.6-jdk-8 mvn package
		'''
	}
	
	stage('Prepare the Microservices images') {
	  for (microservice in microservices) {
			def zipname = "$microservice/target/$microservice-${version}.jar"
			withEnv(["ms=$microservice","zn=${zipname}","ms_root=${microservices_root}"]) {
				sh '''
				  cd $ms_root
				  docker build -t $ms --build-arg PORT=8080 --build-arg JAR_FILE=$zn .
				'''
		  }
	  }
	}
	
	stage('Prepare the Microgateway images') {
	  for (microservice in microservices) {
			def archivename = "$microservice/gateway/$microservice.zip"
			def sidecarname = "$microservice-sidecar"
			withEnv(["ms=$microservice","archive=${archivename}","scname=${sidecarname}","mgw_root=${microgateway_root}"]) {
				sh '''
				  cd $mgw_root
				  microgateway.sh createDockerFile --docker_dir . -p 9090 -a $archive
				  docker build -t $scname -f Microgateway_DockerFile .
				'''
		  }
	  }
	}
	
	
	stage('Push the MicroService+Microgateway images to the repository') {
	 for (microservice in microservices) {
			def archivename = "$microservice/gateway/$microservice.zip"
			def sidecarname = "$microservice-sidecar"
			withEnv(["ms=$microservice","archive=${archivename}","scname=${sidecarname}"]) {
				sh '''
				docker login
				docker tag 
				docker push 
				'''
		  }
	  }
	}
}